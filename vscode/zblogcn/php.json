{
  // Place your snippets for php here. Each snippet is defined under a snippet name and has a prefix, body and
  // description. The prefix is what is used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
  // $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. Placeholders with the
  // same ids are connected.
  // Example:
  // "Print to console": {
  // 	"prefix": "log",
  // 	"body": [
  // 		"console.log("$1");",
  // 		"$2"
  // 	],
  // 	"description": "Log output to console"
  // }
  // "test": {
  //   "prefix": "test",
  //   "body": [
  //     "${TM_FILENAME/(.*)\\..+$/$1/}",
  //     "${TM_DIRECTORY/.+\\\\(\\w+)$/$1/}",
  //     "$TM_FILENAME",
  //   ],
  //   "description": ""
  // },
  "var_dump": {
    "prefix": ["log", "v_log", "var_dump", "print"],
    "body": [
      "",
      "// debug",
      "// ob_clean();",
      "echo __FILE__ . \"丨\" . __LINE__ . \":<br>\\n\";",
      "var_dump(${1:''});",
      "echo \"<br><br>\\n\\n\";",
      "${2:// die();}",
      "// debug",
      ""
    ],
    "description": ""
  },
  "echo_js": {
    "prefix": "echo_js",
    "body": ["${1:echo }'<script src=\"${3:'. ${2} .'}\"></script>'${4:;}"],
    "description": "建议使用zbp-footer"
  },
  "echo_css": {
    "prefix": "echo_css",
    "body": [
      "${1:echo }'<link rel=\"stylesheet\" href=\"${3:'. ${2} .'}\">'${4:;}"
    ],
    "description": "建议使用zbp-footer"
  },
  "echo_json": {
    "prefix": "echo_json",
    "body": [
      "header('Content-Type:application/json; charset=utf-8');",
      "echo json_encode($1);"
    ],
    "description": ""
  },
  "file_put_contents": {
    "prefix": "fput",
    "body": ["file_put_contents(${1:\\$file},${2:\\$str});"],
    "description": ""
  },
  "file_get_contents": {
    "prefix": "fget",
    "body": ["file_get_contents(${1:\\$file})${2:;}"],
    "description": ""
  },
  "init_cfg": {
    "prefix": ["init_cfg", "cfg_init"],
    "body": [
      "${1:global \\$zbp;}",
      "if (!\\$zbp->HasConfig('${TM_DIRECTORY/.+\\\\(\\w+)$/$1/}')) {",
      "  \\$zbp->Config('${TM_DIRECTORY/.+\\\\(\\w+)$/$1/}')->version = 1;",
      "  \\$zbp->Config('${TM_DIRECTORY/.+\\\\(\\w+)$/$1/}')->${2:value}= \"$3\";",
      "  \\$zbp->SaveConfig('${TM_DIRECTORY/.+\\\\(\\w+)$/$1/}');",
      "}"
    ],
    "description": "初始化config"
  },
  "save_cfg": {
    "prefix": ["save_cfg", "cfg_save"],
    "body": [
      "\\$act = GetVars('act', 'GET');",
      "\\$suc = GetVars('suc', 'GET');",
      "if (\\$act == 'save') {",
      "  CheckIsRefererValid();",
      "  foreach (\\$_POST as \\$key => \\$val) {",
      "    \\$zbp->Config('${TM_DIRECTORY/.+\\\\(\\w+)$/$1/}')->\\$key = trim(\\$val);",
      "  }",
      "  \\$zbp->SaveConfig('${TM_DIRECTORY/.+\\\\(\\w+)$/$1/}');",
      "  \\$zbp->BuildTemplate();",
      "  \\$zbp->SetHint('good');",
      "  Redirect('./main.php' . (\\$suc == null ? '' : \"?act={\\$suc}\"));",
      "}"
    ],
    "description": ""
  },
  "isdir": {
    "prefix": "isdir",
    "body": [
      "\\$dir = $1;",
      "if (!is_dir(\\$dir)) {",
      "  @mkdir(\\$dir,0755);",
      "  ${2:#code}",
      "}"
    ],
    "description": ""
  },
  "init_file": {
    "prefix": "init_file",
    "body": [
      "\\$filesList = array(\"$1\");",
      "foreach (\\$filesList as \\$key => \\$value) {",
      "  \\$uFile = ${TM_DIRECTORY/.+\\\\(\\w+)$/$1/}_Path(\"u-{\\$value}\");",
      "  \\$vFile = ${TM_DIRECTORY/.+\\\\(\\w+)$/$1/}_Path(\"v-{\\$value}\");",
      "  if (!is_file(\\$uFile)) {",
      "    @mkdir(dirname(\\$uFile));",
      "    copy(\\$vFile, \\$uFile);",
      "  }",
      "}"
    ],
    "description": ""
  },
  "fnA": {
    "prefix": "fna",
    "body": [
      "function ${TM_DIRECTORY/.+\\\\(\\w+)$/$1/}_a(\\$href, \\$title, \\$text = \"\")",
      "{",
      "  if (empty(\\$text)) {",
      "    \\$text = \\$href;",
      "  }",
      "  return \"<a target=\\\"_blank\\\" href=\\\"{\\$href}\\\" title=\\\"{\\$title}\\\">\\$text</a>\";",
      "}"
    ],
    "description": "初始化config"
  },
  "fnpath": {
    "prefix": "fnpath",
    "body": [
      "function ${TM_DIRECTORY/.+\\\\(\\w+)$/$1/}_Path(\\$file, \\$t = 'path')",
      "{",
      "  global \\$zbp;",
      "  \\$result = \\$zbp->\\$t . 'zb_users/plugin/${TM_DIRECTORY/.+\\\\(\\w+)$/$1/}/';",
      "  switch (\\$file) {",
      "    case '${2:file}':",
      "      return \\$result . '${3:file}';",
      "      break;",
      "    case 'usr':",
      "      return \\$result . 'usr/';",
      "      break;",
      "    case 'var':",
      "      return \\$result . 'var/';",
      "      break;",
      "    case 'main':",
      "      return \\$result . 'main.php';",
      "      break;",
      "    default:",
      "      return \\$result . \\$file;",
      "  }",
      "}"
    ],
    "description": ""
  },
  "Add_Filter_Plugin": {
    "prefix": "Add_Filter_Plugin",
    "body": "Add_Filter_Plugin('$1','$2');",
    "description": "添加插件接口"
  },
  "Filter_Plugin_ViewList_Template": {
    "prefix": "Filter_Plugin_ViewList_Template",
    "body": "Filter_Plugin_ViewList_Template",
    "description": ""
  },
  "Filter_Plugin_ViewPost_Template": {
    "prefix": "Filter_Plugin_ViewPost_Template",
    "body": "Filter_Plugin_ViewPost_Template",
    "description": ""
  },
  "Filter_Plugin_Zbp_Load": {
    "prefix": "Filter_Plugin_Zbp_Load",
    "body": "Filter_Plugin_Zbp_Load",
    "description": ""
  },
  "article": {
    "prefix": "article",
    "body": [
      "\\$article = \\$template->GetTags('article');",
      "\\$article->Content = $1"
    ],
    "description": ""
  },
  "article-Content": {
    "prefix": "article-Content",
    "body": "\\$article->Content",
    "description": "文章正文"
  },
  "zbp": {
    "prefix": "zbp",
    "body": "global \\$zbp;",
    "description": ""
  },
  "zbp-host": {
    "prefix": "zbp_host",
    "body": "\\$zbp->host",
    "description": ""
  },
  "zbp-path": {
    "prefix": "zbp_path",
    "body": "\\$zbp->path",
    "description": ""
  },
  "zbp-header": {
    "prefix": "zbp-header",
    "body": [
      "\\$style = $1;",
      "\\$zbp->header .= \"<link rel=\\\"stylesheet\\\" href=\\\"{\\$style }\\\">\";"
    ],
    "description": ""
  },
  "zbp-footer": {
    "prefix": "zbp-footer",
    "body": [
      "\\$script= $1;",
      "\\$zbp->footer .= \"<script src=\\\"{\\$script}\\\"></script>\";"
    ],
    "description": ""
  },
  "zbp-sethint": {
    "prefix": ["zbp-sethint", "sethint"],
    "body": ["\\$zbp->SetHint(\"tips${1: hint_always}\", \"$2\");"],
    "description": "设置提示语"
  },
  // https://github.com/zblogcn/snippets
  "zbp-GetCSRFToken": {
    "prefix": "zbp-Token",
    "body": "\\$zbp->GetCSRFToken();",
    "description": "生成CSRF Token"
  },
  "zbp-VerifyCSRFToken": {
    "prefix": "zbp-Token",
    "body": "\\$zbp->VerifyCSRFToken(\\$token);",
    "description": "验证CSRF Token"
  },
  "zbp-BuildTemplate": {
    "prefix": "zbp-BuildTemplate",
    "body": "\\$zbp->BuildTemplate();",
    "description": "重建模板编译"
  },
  "zbp-CheckMemberByNameOrAliasExist": {
    "prefix": "zbp-CheckMemberByNameOrAliasExist",
    "body": "\\$zbp->CheckMemberByNameOrAliasExist(${1:$name});",
    "description": "检查指定名称或别名的用户是否存在(不区分大小写)"
  },
  "zbp-CheckMemberNameExist": {
    "prefix": "zbp-CheckMemberNameExist",
    "body": "\\$zbp->CheckMemberNameExist(${1:$name});",
    "description": "检查指定名称的用户是否存在(不区分大小写)"
  },
  "zbp-GetArticleList": {
    "prefix": "zbp-GetArticleList",
    "body": "\\$zbp->GetArticleList(${1:$select}, ${2:$where}, ${3:$order}, ${4:$limit}, ${5:$option}, ${5:$readtags});",
    "description": ""
  },
  "zbp-GetCategoryByAlias": {
    "prefix": "zbp-GetCategoryByAlias",
    "body": "\\$zbp->GetCategoryByAlias(${1:$name});",
    "description": "通过分类别名获取分类实例"
  },
  "zbp-GetCategoryByAliasOrName": {
    "prefix": "zbp-GetCategoryByAliasOrName",
    "body": "\\$zbp->GetCategoryByAliasOrName(${1:$name});",
    "description": "通过分类别名获取分类实例(旧版本使用)"
  },
  "zbp-GetCategoryByID": {
    "prefix": "zbp-GetCategoryByID",
    "body": "\\$zbp->GetCategoryByID(${1:$id});",
    "description": "通过ID获取分类实例"
  },
  "zbp-GetCategoryByName": {
    "prefix": "zbp-GetCategoryByName",
    "body": "\\$zbp->GetCategoryByName(${1:$name});",
    "description": "通过分类名获取分类实例"
  },
  "zbp-GetCategoryList": {
    "prefix": "zbp-GetCategoryList",
    "body": "\\$zbp->GetCategoryList(${1:$select}, ${2:$where}, ${3:$order}, ${4:$limit}, ${5:$option});",
    "description": ""
  },
  "zbp-GetCommentByID": {
    "prefix": "zbp-GetCommentByID",
    "body": "\\$zbp->GetCommentByID(${1:$id});",
    "description": "通过ID获取评论实例"
  },
  "zbp-GetCommentList": {
    "prefix": "zbp-GetCommentList",
    "body": "\\$zbp->GetCommentList(${1:$select}, ${2:$where}, ${3:$order}, ${4:$limit}, ${5:$option});",
    "description": ""
  },
  "zbp-GetCounterByID": {
    "prefix": "zbp-GetCounterByID",
    "body": "\\$zbp->GetCounterByID(${1:$id});",
    "description": "通过ID获取审计类实例"
  },
  "zbp-GetCounterList": {
    "prefix": "zbp-GetCounterList",
    "body": "\\$zbp->GetCounterList(${1:$select}, ${2:$where}, ${3:$order}, ${4:$limit}, ${5:$option});",
    "description": ""
  },
  "zbp-gd": {
    "prefix": "zbp-gd",
    "body": " \\$zbp->GetData(); ",
    "description": "获取数据库数据"
  },
  "zbp-GetListCustom": {
    "prefix": "zbp-GetListCustom",
    "body": "\\$zbp->GetListCustom(${1:$table}, ${2:$datainfo}, ${3:$sql});",
    "description": "查询指定数据结构的sql并返回Base对象列表"
  },
  "zbp-GetListCustomByArray": {
    "prefix": "zbp-GetListCustomByArray",
    "body": "\\$zbp->GetListCustomByArray(${1:$table}, ${2:$datainfo}, ${3:$sql});",
    "description": "查询ID数据的指定数据结构的sql并返回Base对象列表"
  },
  "zbp-GetListType": {
    "prefix": "zbp-GetListType",
    "body": "\\$zbp->GetListType(${1:$type}, ${2:$sql});",
    "description": "根据获取base结构数据"
  },
  "zbp-GetListTypeByArray": {
    "prefix": "zbp-GetListTypeByArray",
    "body": "\\$zbp->GetListTypeByArray(${1:$type}, ${2:$array});",
    "description": "查询ID数据的指定类型的sql并返回指定类型对象列表"
  },
  "zbp-GetMemberByID": {
    "prefix": "zbp-GetMemberByID",
    "body": "\\$zbp->GetMemberByID(${1:$id});",
    "description": "通过ID获取用户实例"
  },
  "zbp-GetMemberByName": {
    "prefix": "zbp-GetMemberByName",
    "body": "\\$zbp->GetMemberByName(${1:$name});",
    "description": "通过用户名获取用户实例(不区分大小写)"
  },
  "zbp-GetMemberByNameOrAlias": {
    "prefix": "zbp-GetMemberByNameOrAlias",
    "body": "\\$zbp->GetMemberByNameOrAlias(${1:$name});",
    "description": "通过获取用户名或别名实例(不区分大小写)"
  },
  "zbp-GetMemberList": {
    "prefix": "zbp-GetMemberList",
    "body": "\\$zbp->GetMemberList(${1:$select}, ${2:$where}, ${3:$order}, ${4:$limit}, ${5:$option});",
    "description": ""
  },
  "zbp-GetModuleByFileName": {
    "prefix": "zbp-GetModuleByFileName",
    "body": "\\$zbp->GetModuleByFileName(${1:$fn});",
    "description": "通过FileName获取模块实例"
  },
  "zbp-GetModuleByID": {
    "prefix": "zbp-GetModuleByID",
    "body": "\\$zbp->GetModuleByID(${1:$id});",
    "description": "通过ID获取模块实例"
  },
  "zbp-GetModuleList": {
    "prefix": "zbp-GetModuleList",
    "body": "\\$zbp->GetModuleList(${1:$select}, ${2:$where}, ${3:$order}, ${4:$limit}, ${5:$option});",
    "description": ""
  },
  "zbp-GetPageList": {
    "prefix": "zbp-GetPageList",
    "body": "\\$zbp->GetPageList(${1:$select}, ${2:$where}, ${3:$order}, ${4:$limit}, ${5:$option});",
    "description": ""
  },
  "zbp-GetPostByArray": {
    "prefix": "zbp-GetPostByArray",
    "body": "\\$zbp->GetPostByArray(${1:$array});",
    "description": "通过ID数组获取文章实例"
  },
  "zbp-GetPostByID": {
    "prefix": "zbp-GetPostByID",
    "body": "\\$zbp->GetPostByID(${1:$id});",
    "description": "通过ID获取文章实例"
  },
  "zbp-GetPostList": {
    "prefix": "zbp-GetPostList",
    "body": "\\$zbp->GetPostList(${1:$select}, ${2:$where}, ${3:$order}, ${4:$limit}, ${5:$option});",
    "description": "获取文章列表"
  },
  "zbp-gt": {
    "prefix": "zbp-gt",
    "body": "\\$zbp->GetTable();",
    "description": "获取数据表"
  },
  "zbp-GetTagByAlias": {
    "prefix": "zbp-GetTagByAlias",
    "body": "\\$zbp->GetTagByAlias(${1:$name});",
    "description": "通过tag名获取tag实例"
  },
  "zbp-GetTagByAliasOrName": {
    "prefix": "zbp-GetTagByAliasOrName",
    "body": "\\$zbp->GetTagByAliasOrName(${1:$name});",
    "description": "通过tag名获取tag实例"
  },
  "zbp-GetTagByID": {
    "prefix": "zbp-GetTagByID",
    "body": "\\$zbp->GetTagByID(${1:$id});",
    "description": "通过ID获取tag实例"
  },
  "zbp-GetTagList": {
    "prefix": "zbp-GetTagList",
    "body": "\\$zbp->GetTagList(${1:$select}, ${2:$where}, ${3:$order}, ${4:$limit}, ${5:$option});",
    "description": ""
  },
  "zbp-GetUploadByID": {
    "prefix": "zbp-GetUploadByID",
    "body": "\\$zbp->GetUploadByID(${1:$id});",
    "description": "通过ID获取附件实例"
  },
  "zbp-GetUploadList": {
    "prefix": "zbp-GetUploadList",
    "body": "\\$zbp->GetUploadList(${1:$select}, ${2:$where}, ${3:$order}, ${4:$limit}, ${5:$option});",
    "description": ""
  },
  "zbp-load": {
    "prefix": "zbp-load",
    "body": "\\$zbp->Load();",
    "description": "载入ZBP"
  },
  "zbp-LoadInfoByArray": {
    "prefix": "zbp-LoadInfoByArray",
    "body": "\\$zbp->LoadInfoByArray(${1:$array});",
    "description": "从数组中加载数据"
  },
  "zbp-LoadInfoByAssoc": {
    "prefix": "zbp-LoadInfoByAssoc",
    "body": "\\$zbp->LoadInfoByAssoc(${1:$array});",
    "description": "根据数组从数据库内查找数据并返回"
  },
  "zbp-LoadInfoByField": {
    "prefix": "zbp-LoadInfoByField",
    "body": "\\$zbp->LoadInfoByField(${1:$field}, ${2:$field_value});",
    "description": "根据特定的字段和值搜索数据"
  },
  "zbp-loadinfobyid": {
    "prefix": "zbp-loadinfobyid",
    "body": "\\$zbp->LoadInfoByID(${1:$id});",
    "description": "获取数据库内指定ID的数据"
  }
}
